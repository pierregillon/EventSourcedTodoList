@using TimeOnion.Pages.TodayTaskPreparation.Steps
@using TimeOnion.Pages.TodayTaskPreparation.Components
@inherits BlazorState.BlazorStateComponent

@if (State.CurrentStep is not null)
{
    <MudDialog>
        <DialogContent>
            <TodayTaskPreparationTimeline></TodayTaskPreparationTimeline>
            <br/>
            <MudContainer MaxWidth="MaxWidth.Medium" Style="padding: 10px;">
                @switch (State.CurrentStep.Id)
                {
                    case TodayTaskPreparationSteps.EndYesterdayTasks:
                        <EndYesterdayTasks></EndYesterdayTasks>
                        break;

                    case TodayTaskPreparationSteps.AddThisWeekTasks:
                        <AddThisWeekTasks></AddThisWeekTasks>
                        break;

                    case TodayTaskPreparationSteps.FinalizeTodayTasks:
                        <FinalizeTodayTasks></FinalizeTodayTasks>
                        break;
                }
                <div style="display: flex;align-items: center;justify-content: flex-end;gap: 10px">
                    <MudButton OnClick="Cancel">Annuler</MudButton>
                    @if (State.CurrentStep.Next() is null)
                    {
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Submit">Fin</MudButton>
                    }
                    else
                    {
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Next">Suivant</MudButton>
                    }
                </div>
            </MudContainer>

        </DialogContent>

    </MudDialog>
}

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = default!;

    TodayTaskPreparationState State => GetState<TodayTaskPreparationState>();

    protected override async Task OnInitializedAsync()
        => await Mediator.Send(new TodayTaskPreparationState.Load());

    async Task Next() => await Mediator.Send(new TodayTaskPreparationState.MoveToNextPreparationStep());

    async Task Submit()
    {
        await Mediator.Send(new TodayTaskPreparationState.MoveToNextPreparationStep());
        await Mediator.Send(new TodoListState.LoadData());
        MudDialog.Close(DialogResult.Ok(true));
    }

    void Cancel() => MudDialog.Cancel();

}