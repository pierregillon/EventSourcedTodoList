@using TimeOnion.Domain.Todo.UseCases
@using TimeOnion.Domain.Todo.Core
@inherits TimeOnion.Shared.MVU.BlazorStateComponent

@if (TodoList is not null)
{
    <div class="flex-grow-1" style="max-width: 700px">
        <div class="overlay-parent d-flex align-center gap-3">
            <TodoListActionsComponent
                TodoList="@TodoList"
                Class="invisible overlay d-none d-md-flex">
            </TodoListActionsComponent>

            <MudIcon
                Icon="@Icons.Material.Filled.Checklist"
                Color="Color.Primary"
                Size="Size.Large">
            </MudIcon>

            <TextEditor
                Class="title"
                Text="@TodoList.Name"
                TextChanged="newName => Rename(TodoList.Id, newName)">
            </TextEditor>

            <TodoListActionsComponent
                TodoList="@TodoList"
                Class="d-flex d-md-none">
            </TodoListActionsComponent>

        </div>

        <MudDivider Class="mt-2 mb-2"/>

        <TodoItemsComponent TodoListId="@TodoList.Id"></TodoItemsComponent>
    </div>
}

@code {

    [Parameter]
    public TodoListReadModel? TodoList { get; set; }

    private async Task Rename(TodoListId listId, string newName)
        => await Execute(new TodoListState.RenameTodoList(listId, newName));

}