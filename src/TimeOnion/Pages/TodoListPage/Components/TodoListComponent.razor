@using TimeOnion.Domain.Todo.UseCases
@using TimeOnion.Domain.Todo.Core
@inherits BlazorState.BlazorStateComponent

@if (TodoList is not null)
{
    <div class="flex-grow-1">
        <div class="overlay-parent d-flex align-center gap-3">
            <MudMenu
                Class="invisible overlay d-none d-md-flex"
                Icon="@Icons.Material.Filled.MoreHoriz"
                Size="Size.Small"
                AnchorOrigin="Origin.BottomCenter">
            
                <MudMenuItem
                    Icon="@Icons.Material.Filled.CreateNewFolder"
                    IconColor="Color.Primary"
                    OnClick="() => CreateNewCategory(TodoList.Id)">
                    Créer une catégorie
                </MudMenuItem>
    
                <MudMenuItem
                    Icon="@Icons.Material.Filled.Delete"
                    IconColor="Color.Error"
                    OnClick="() => Delete(TodoList.Id)">
                    Supprimer la liste
                </MudMenuItem>
            
            </MudMenu>
            
            <MudIcon
                Icon="@Icons.Material.Filled.Checklist"
                Color="Color.Primary"
                Size="Size.Large">
            </MudIcon>

            <TextEditor
                Class="title"
                Text="@TodoList.Name"
                TextChanged="newName => Rename(TodoList.Id, newName)">
            </TextEditor>

        </div>

        <MudDivider Class="mt-2 mb-2"/>

        <TodoItemsComponent TodoListId="@TodoList.Id"></TodoItemsComponent>
    </div>
}

@code {

    [Parameter]
    public TodoListReadModel? TodoList { get; set; }

    private async Task Rename(TodoListId listId, string newName)
        => await Mediator.Send(new TodoListState.RenameTodoList(listId, newName));

    private async Task CreateNewCategory(TodoListId listId)
        => await Mediator.Send(new TodoListState.CreateNewCategory(listId, "Nouvelle catégorie"));

    private async Task Delete(TodoListId listId)
        => await Mediator.Send(new TodoListState.DeleteTodoList(listId));

}