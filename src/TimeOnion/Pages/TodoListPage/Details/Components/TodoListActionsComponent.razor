@using TimeOnion.Domain.Todo.UseCases
@using TimeOnion.Pages.TodoListPage.Details.Actions.Categories
@using TimeOnion.Pages.TodoListPage.List.Actions
@inherits TimeOnion.Shared.MVU.BlazorStateComponent
@inject IDialogService DialogService

<MudMenu
    Class="@Class"
    Icon="@Icons.Material.Filled.MoreHoriz"
    Size="Size.Small"
    AnchorOrigin="Origin.BottomCenter">

    <MudMenuItem
        Icon="@Icons.Material.Filled.CreateNewFolder"
        IconColor="Color.Primary"
        OnClick="@(() => Execute(new CreateNewCategoryAction(TodoList.Id)))"
        OnTouch="@(() => Execute(new CreateNewCategoryAction(TodoList.Id)))">
        Créer une catégorie
    </MudMenuItem>

    <MudMenuItem
        Icon="@Icons.Material.Filled.Delete"
        IconColor="Color.Error"
        OnClick="ConfirmDeletion"
        OnTouch="ConfirmDeletion">
        Supprimer la liste
    </MudMenuItem>

</MudMenu>

@code {

    [Parameter]
    public TodoListReadModel TodoList { get; set; } = default!;

    [Parameter]
    public string Class { get; set; } = string.Empty;

    private async Task ConfirmDeletion()
    {
        if (await DialogService.ShowConfirmationDialog("Confirmation", $"Êtes-vous sûr de vouloir supprimer la liste \"{TodoList.Name}\" ainsi que toutes ses tâches ?"))
        {
            await Execute(new DeleteTodoListAction(TodoList.Id));
        }
    }

}