@page "/todolist"
@using EventSourcedTodoList.Actions
@using EventSourcedTodoList.Domain.Todo.List
@inherits BlazorState.BlazorStateComponent

<PageTitle>Aujourd'hui</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small">

    <h1>Aujourd'hui</h1>

    <MudDivider Class="items"/>

    <div>
        @foreach (var item in State.Items)
        {
            <TaskItem Item="@item"></TaskItem>
        }

        <div class="d-flex">
            <MudCheckBox
                Class="compact"
                Checked="@(false)"
                Color="Color.Secondary">
            </MudCheckBox>

            <MudTextField
                T="string"
                InputMode="InputMode.text"
                Text="@State.NewTodoItemDescription"
                TextChanged="AddItemToDo"
                TextUpdateSuppression="false"
                Class="compact"
                DisableUnderLine="true">
            </MudTextField>
        </div>
    </div>

</MudContainer>

<style>
    .items {
        margin: 15px 0;
    }
</style>

@code {

    TodoListState State => GetState<TodoListState>();

    protected override async Task OnInitializedAsync() => await Mediator.Send(new TodoListState.LoadTodoList());

    private async Task AddItemToDo(string itemDescription)
        => await Mediator.Send(new TodoListState.AddNewItem(itemDescription, Temporality.ThisDay));

}